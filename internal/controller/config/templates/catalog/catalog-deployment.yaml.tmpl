apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    app: {{.Name}}
    component: model-catalog
    app.kubernetes.io/name: {{.Name}}
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: model-catalog
    app.kubernetes.io/created-by: model-registry-operator
    app.kubernetes.io/part-of: model-registry
    app.kubernetes.io/managed-by: model-registry-operator
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: {{.Name}}
      component: model-catalog
  template:
    metadata:
      labels:
        app: {{.Name}}
        component: model-catalog
      annotations:
        openshift.io/required-scc: restricted-v2
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      volumes:
      - name: user-sources
        configMap:
          name: model-catalog-sources
      - name: default-sources
        configMap:
          name: model-catalog-default-sources
      - name: catalog-data
        emptyDir: {}
      - name: benchmark-data
        emptyDir: {}
      {{- if .Spec.KubeRBACProxy }}
      - name: kube-rbac-proxy-tls
        secret:
          secretName: {{.Name}}-kube-rbac-proxy
          defaultMode: 0600
      - name: kube-rbac-proxy-config
        configMap:
          name: {{.Name}}-kube-rbac-proxy-config
      {{- end}}
      serviceAccountName: {{.Name}}
      initContainers:
        - name: catalog-data-init
          image: {{.CatalogDataImage}}
          command:
            - /bin/sh
            - -c
            - cp /app/data/models-catalog.yaml /shared-data/default-catalog.yaml
          volumeMounts:
            - name: catalog-data
              mountPath: /shared-data
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - name: benchmark-data-init
          image: {{.BenchmarkDataImage}}
          command:
            - /bin/sh
            - -c
            - cp -r /app/benchmarks/* /shared-benchmark-data/ || true
          volumeMounts:
            - name: benchmark-data
              mountPath: /shared-benchmark-data
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      containers:
        - name: catalog
          command:
            - /model-registry
            - catalog
          args:
            - --listen=0.0.0.0:8080
            - --catalogs-path=/data/user-sources/sources.yaml
            - --catalogs-path=/data/default-sources/sources.yaml
          image: {{.Spec.Rest.Image}}
          ports:
            - name: http-api
              containerPort: 8080
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 5
            tcpSocket:
              port: http-api
            timeoutSeconds: 2
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            tcpSocket:
              port: http-api
            timeoutSeconds: 2
          {{- with .Spec.Rest.Resources }}
          resources:
            {{- with .Requests }}
            requests:
              cpu: {{.Cpu}}
              memory: {{.Memory}}
            {{- end }}
            {{- with .Limits }}
            limits:
              {{ if not .Cpu.IsZero }}cpu: {{.Cpu}}{{ end }}
              memory: {{.Memory}}
            {{- end }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
          - name: user-sources
            mountPath: /data/user-sources
          - name: default-sources
            mountPath: /data/default-sources
          - name: catalog-data
            mountPath: /shared-data
          - name: benchmark-data
            mountPath: /shared-benchmark-data
        {{ if .Spec.KubeRBACProxy }}
        - name: kube-rbac-proxy
          args:
            - --secure-listen-address=0.0.0.0:{{.Spec.KubeRBACProxy.Port}}
            - --upstream=http://127.0.0.1:8080/
            - --proxy-endpoints-port=8888
            - --logtostderr=true
            - --v=0
            - --config-file=/etc/kube-rbac-proxy/config-file.yaml
            - --tls-cert-file=/etc/tls/tls.crt
            - --tls-private-key-file=/etc/tls/tls.key
          image: {{.Spec.KubeRBACProxy.Image}}
          ports:
            - containerPort: {{.Spec.KubeRBACProxy.Port}}
              name: https-proxy
              protocol: TCP
            - containerPort: 8888
              name: proxy-healthz
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: proxy-healthz
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: proxy-healthz
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - mountPath: /etc/tls
              name: kube-rbac-proxy-tls
            - mountPath: /etc/kube-rbac-proxy
              name: kube-rbac-proxy-config
        {{ end }}
